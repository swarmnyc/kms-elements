/* Autogenerated with kurento-module-creator */

#include <gst/gst.h>
#include "MediaPipeline.hpp"
#include <StyleCompositeImplFactory.hpp>
#include "StyleCompositeImpl.hpp"
#include <jsonrpc/JsonSerializer.hpp>
#include <KurentoException.hpp>

#define GST_CAT_DEFAULT kurento_style_composite_impl
GST_DEBUG_CATEGORY_STATIC (GST_CAT_DEFAULT);
#define GST_DEFAULT_NAME "KurentoStyleCompositeImpl"

#define FACTORY_NAME "stylecompositemixer"

namespace kurento
{

StyleCompositeImpl::StyleCompositeImpl (const boost::property_tree::ptree
                                        &config, std::shared_ptr<MediaPipeline> mediaPipeline)  : HubImpl (config,
                                              std::dynamic_pointer_cast<MediaObjectImpl> (mediaPipeline), FACTORY_NAME)
{}

void StyleCompositeImpl::setStyle (const std::string &style)
{
  g_object_set ( G_OBJECT (element), "style", style.c_str(), NULL);
}

std::string StyleCompositeImpl::getStyle ()
{
  std::string style;
  gchar *ret;

  g_object_get ( G_OBJECT (element), "style", &ret, NULL);

  if (ret != NULL) {
    style = std::string (ret);
    g_free (ret);
  }

  return style;
}

bool StyleCompositeImpl::setViewEnableStatus (int viewId, char enable)
{
  int found, viewsStart;
  gchar viewIdStr[64];
  std::string style;
  style = this->getStyle();
  g_snprintf (viewIdStr, 64, "'id':%d,", viewId);
  found = style.find ("'views':[", 0);

  if (found < 0) {
    return false;
  }

  viewsStart = found - 1;
  found = style.find (viewIdStr, found + 9);

  if (found < 0) {
    return false;
  }

  found = style.find ("'enable':", found + 6);

  if (found < 0) {
    return false;
  }

  style.at (found + 9) = enable;
  style.at (viewsStart) = '{';
  this->setStyle (style.substr (viewsStart).c_str() );
  return true;
}

void StyleCompositeImpl::showView (int viewId)
{
  setViewEnableStatus (viewId, '1');
}

void StyleCompositeImpl::hideView (int viewId)
{
  setViewEnableStatus (viewId, '0');
}

MediaObjectImpl *
StyleCompositeImplFactory::createObject (const boost::property_tree::ptree
    &config, std::shared_ptr<MediaPipeline> mediaPipeline) const
{
  return new StyleCompositeImpl (config, mediaPipeline);
}

StyleCompositeImpl::StaticConstructor StyleCompositeImpl::staticConstructor;

StyleCompositeImpl::StaticConstructor::StaticConstructor()
{
  GST_DEBUG_CATEGORY_INIT (GST_CAT_DEFAULT, GST_DEFAULT_NAME, 0,
                           GST_DEFAULT_NAME);
}

} /* kurento */
